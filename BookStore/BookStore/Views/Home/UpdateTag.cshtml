@model BookStore.Contract.ResponseModels.BookResponseModel

@{
    ViewData["Title"] = "Update Book Tag";
    var index = 0;
}

<div class="text-center">
    <h1 class="display-4">Update Book Tag</h1>
</div>

<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateTag">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="BookId" />
            <input type="hidden" asp-for="BookName" />
            <div class="form-group">
                <label asp-for="BookName" class="control-label">Book Name</label>
                <input asp-for="BookName" class="form-control" disabled />
                <span asp-validation-for="BookName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tags" class="control-label">Tag(s)</label>
                <br />
                @if (!Model.Tags.Any())
                {
                    <p>There is no tag in the system. Please <a asp-controller="Tag" asp-action="Create">add some tags</a> first.</p>
                }
                @for (var i = 0; i < Model.Tags.Count(); i++)
                {
                    @Html.HiddenFor(x => x.Tags[i].TagName)
                    @Html.HiddenFor(x => x.Tags[i].TagId)
                    @Html.CheckBoxFor(x => x.Tags[i].Selected)
                    @Html.LabelFor(x => x.Tags[i].Selected, Model.Tags[i].TagName)
                    index++;
                    if (index < Model.Tags.Count())
                    {
                        <br />
                    }
                }
            </div>
            @if (Model.Tags.Any())
            {
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            }
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>